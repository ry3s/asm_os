     1                                      BOOT_LOAD equ 0x7C00        ; ブートプログラムのロード位置
     2                                      ORG BOOT_LOAD               ; ロードアドレスをアセンブラに指示
     3                                  ;;;
     4                                  ;;; マクロ
     5                                  ;;;
     6                                      %include "../include/macros.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep %0 - 1
     3                              <1>     push %{-1:-1}
     4                              <1>     %rotate - 1
     5                              <1>     %endrep
     6                              <1>     %rotate -1
     7                              <1>     call %1
     8                              <1> 
     9                              <1>     %if 1 < %0
    10                              <1>     add sp, (__BITS__ >> 3) * (%0 - 1)
    11                              <1>     %endif
    12                              <1> %endmacro
     7                                  
     8                                  ;;;
     9                                  ;;; エントリポイント
    10                                  ;;;
    11                                  entry:
    12 00000000 EB58                        jmp ipl                       ; IPLへジャンプ
    13                                  
    14                                      ;; BPB(BIOS Prameter Block)
    15 00000002 90<rept>                    times 90 - ($ - $$) db 0x90
    16                                  
    17                                      ;; IPL (Initial Program Loader)
    18                                  ipl:
    19 0000005A FA                          cli                        ; 割り込み禁止
    20                                  
    21 0000005B B80000                      mov ax, 0x0000              ; AX = 0x0000;
    22 0000005E 8ED8                        mov ds, ax                  ; DS = 0x0000;
    23 00000060 8EC0                        mov es, ax                  ; ES = 0x0000;
    24 00000062 8ED0                        mov ss, ax                  ; SS = 0x0000;
    25 00000064 BC007C                      mov sp, BOOT_LOAD           ; SP = 0x7C00;
    26                                  
    27 00000067 FB                          sti                        ; 割り込み許可
    28                                  
    29 00000068 8816[B800]                  mov [BOOT.DRIVE], dl       ; ブートドライブを保存
    30                                  
    31                                      ;; 文字を表示
    32 0000006C 68[9800]E8480083C4-         cdecl puts, .s0             ; puts(.s0);
    32 00000074 02                 
    33                                  
    34                                      ;; 次の 512 バイトを読み込む
    35 00000075 B402                        mov ah, 0x02                ; AH = 読み込み命令
    36 00000077 B001                        mov al, 1                   ; AL = 読み込みセクタ数
    37 00000079 B90200                      mov cx, 0x0002              ; CX = シリンダ/セクタ
    38 0000007C B600                        mov dh, 0x00                ; DH = ヘッド位置
    39 0000007E 8A16[B800]                  mov dl, [BOOT.DRIVE]        ; DL = ドライブ番号
    40 00000082 BB007E                      mov bx, 0x7C00 + 512        ; BX = オフセット
    41 00000085 CD13                        int 0x13                    ;
    42                                                                  ;
    43                                      .10Q:                       ;
    44 00000087 730C                        jnc .10E                    ; if (CF == BIOS(0x13, 0x02)) {
    45                                                                  ;
    46                                      .10T:                       ;   puts(.e0);
    47 00000089 68[A500]E82B0083C4-         cdecl puts, .e0             ;   reboot();
    47 00000091 02                 
    48 00000092 E84400                      call reboot                 ; }
    49                                  
    50                                      .10E:
    51                                  
    52                                      ;; 次のステージへ移行
    53 00000095 E96801                      jmp stage_2                 ; ブート処理の第2ステージ
    54                                  
    55                                      ;; データ
    56 00000098 426F6F74696E672E2E-         .s0 db "Booting...", 0x0A, 0x0D, 0
    56 000000A1 2E0A0D00           
    57 000000A5 4572726F723A736563-         .e0 db "Error:sector read", 0
    57 000000AE 746F72207265616400 
    58                                  
    59 000000B7 00                          ALIGN 2, db 0
    60                                  BOOT:                           ; ブートドライブに関する情報
    61 000000B8 0000                        .DRIVE: dw 0                ; ドライブ番号
    62                                  
    63                                  
    64                                  ;;;
    65                                  ;;; モジュール
    66                                  ;;;
    67                                      %include "../modules/real/puts.s"
     1                              <1> ;;; 文字列の表示
     2                              <1> ;;; @fn puts(str);
     3                              <1> ;;; @param str the address of string
     4                              <1> ;;; @return nothing
     5                              <1> 
     6                              <1> puts:
     7                              <1>     ;; スタックフレームの構築
     8 000000BA 55                  <1>     push bp
     9 000000BB 89E5                <1>     mov bp, sp
    10                              <1>     ;; レジスタの保存
    11 000000BD 50                  <1>     push ax
    12 000000BE 53                  <1>     push bx
    13 000000BF 56                  <1>     push si
    14                              <1> 
    15 000000C0 8B7604              <1>     mov si, [bp + 4]            ; SI = the address of string
    16                              <1> 
    17                              <1>     ;; 関数本体
    18 000000C3 B40E                <1>     mov ah, 0x0E
    19 000000C5 BB0000              <1>     mov bx, 0x0000
    20                              <1> 
    21 000000C8 FC                  <1>     cld                         ; DF = 0;
    22                              <1>                                 ; do {
    23                              <1>     .10L:                       ;    AL = *SI++;
    24 000000C9 AC                  <1>     lodsb                       ;    if (0 == AL) break;
    25                              <1>                                 ;    Int10(0x0E, AL);
    26 000000CA 3C00                <1>     cmp al, 0                   ; } while(1);
    27 000000CC 7404                <1>     je .10E
    28                              <1> 
    29 000000CE CD10                <1>     int 0x10
    30 000000D0 EBF7                <1>     jmp .10L
    31                              <1> 
    32                              <1>     .10E:
    33                              <1>     ;; レジスタの復帰
    34 000000D2 5E                  <1>     pop si
    35 000000D3 5B                  <1>     pop bx
    36 000000D4 58                  <1>     pop ax
    37                              <1>     ;; スタックフレームの破棄
    38 000000D5 89EC                <1>     mov sp, bp
    39 000000D7 5D                  <1>     pop bp
    40                              <1> 
    41 000000D8 C3                  <1>     ret
    68                                      %include "../modules/real/reboot.s"
     1                              <1> ;;; メッセージを表示して再起動を行う
     2                              <1> ;;; void reboot(void);
     3                              <1> ;;;
     4                              <1> reboot:
     5                              <1>     ;; メッセージを表示
     6 000000D9 68[F500]E8DBFF83C4- <1>     cdecl puts, .s0
     6 000000E1 02                  <1>
     7                              <1> 
     8                              <1>     ;; キー入力待ち
     9                              <1>     .10L:
    10 000000E2 B410                <1>     mov ah, 0x10
    11 000000E4 CD16                <1>     int 0x16
    12                              <1> 
    13 000000E6 3C20                <1>     cmp al, ' '
    14 000000E8 75F8                <1>     jne .10L
    15                              <1> 
    16                              <1>     ;; 改行を出力
    17 000000EA 68[1301]E8CAFF83C4- <1>     cdecl puts, .s1
    17 000000F2 02                  <1>
    18                              <1> 
    19                              <1>     ;; 再起動
    20 000000F3 CD19                <1>     int 0x19                    ; BIOS(0x19) reboot();
    21                              <1> 
    22                              <1>     ;; 文字列データ
    23 000000F5 0A0D50757368205350- <1>     .s0 db 0x0A, 0x0D, "Push SPACE key to reboot...", 0
    23 000000FE 414345206B65792074- <1>
    23 00000107 6F207265626F6F742E- <1>
    23 00000110 2E2E00              <1>
    24 00000113 0A0D0A0D00          <1>     .s1 db 0x0A, 0x0D, 0x0A, 0x0D, 0
    69                                  ;;;
    70                                  ;;; ブートフラグ(先頭 512 バイトの終了)
    71                                  ;;;
    72 00000118 00<rept>                    times 510 - ($ - $$) db 0x00
    73 000001FE 55AA                        db 0x55, 0xAA
    74                                  
    75                                  ;;;
    76                                  ;;; ブート処理の第2ステージ
    77                                  ;;;
    78                                  stage_2:
    79                                      ;; 文字列を表示
    80 00000200 68[0B02]E8B4FE83C4-         cdecl puts, .s0             ; puts(.s0);
    80 00000208 02                 
    81                                  
    82                                      ;; 処理の終了
    83 00000209 EBFE                        jmp $                       ; while (1);
    84                                  
    85                                      ;; データ
    86 0000020B 326E64207374616765-         .s0 db "2nd stage...", 0x0A, 0x0D, 0
    86 00000214 2E2E2E0A0D00       
    87                                  
    88                                  ;;;
    89                                  ;;; パディング(このファイルは 8K byte とする)
    90                                  ;;;
    91 0000021A 00<rept>                    times (2014 * 8) - ($ - $$) db 0 ; 8K byte
